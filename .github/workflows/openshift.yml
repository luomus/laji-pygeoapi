name: Build Image

on:
  push:
    branches: ['main', 'dev']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    # Part 1: Build and push the python scripts image
    - name: Extract metadata (tags, labels) for Docker
      id: meta-python-scripts
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-python-scripts
          
    - name: Buildah Action - python-scripts
      id: build_python-scripts
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}python-scripts
        tags: ${{ steps.meta-python-scripts.outputs.tags }}
        oci: true
        containerfiles: |
          ./Dockerfile
          
    - name: Push python-scripts Image To GHCR
      uses: redhat-actions/push-to-registry@v2
      with:
        tags: ${{ steps.build_python-scripts.outputs.tags }}
        username: ${{ github.actor }}
        password: ${{ secrets.ACCESS_TOKEN }}

    # Part 2: Build and push the pygeoapi image
    - name: Extract metadata (tags, labels) for Docker
      id: meta-pygeoapi
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-pygeoapi

    - name: Buildah Action - pygeoapi
      id: build_pygeoapi
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}-pygeoapi
        tags: ${{ steps.meta-pygeoapi.outputs.tags }}
        oci: true
        containerfiles: |
          ./pygeoapi/Dockerfile
        build-args: |
          target=default
          
    - name: Push pygeoapi Image To GHCR
      uses: redhat-actions/push-to-registry@v2
      with:
        tags: ${{ steps.build_pygeoapi.outputs.tags }}
        username: ${{ github.actor }}
        password: ${{ secrets.ACCESS_TOKEN }}

    # Part 3: Build and push the pygeoapi virva image
    - name: Extract metadata (tags, labels) for Docker
      id: meta-pygeoapi-virva
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-pygeoapi-virva

    - name: Buildah Action - pygeoapi virva
      id: build_pygeoapi-virva
      uses: redhat-actions/buildah-build@v2
      with:
        image: ${{ env.IMAGE_NAME }}-pygeoapi-virva
        tags: ${{ steps.meta-pygeoapi-virva.outputs.tags }}
        oci: true
        containerfiles: |
          ./pygeoapi/Dockerfile
        build-args: |
          target=virva

    - name: Push pygeoapi virva Image To GHCR
      uses: redhat-actions/push-to-registry@v2
      with:
        tags: ${{ steps.build_pygeoapi-virva.outputs.tags }}
        username: ${{ github.actor }}
        password: ${{ secrets.ACCESS_TOKEN }}