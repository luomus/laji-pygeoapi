services:
  pygeoapi:
    build:
      context: .
      dockerfile: pygeoapi/Dockerfile
      args:
        target: ${TARGET}
    entrypoint: /pygeoapi/entrypoint-dev.sh
    ports:
      - "5000:5000"
    environment:
      POSTGRES_DB: ${INTERNAL_POSTGRES_DB}
      POSTGRES_USER: ${INTERNAL_POSTGRES_USER}
      POSTGRES_PASSWORD: ${INTERNAL_POSTGRES_PASSWORD}
      POSTGRES_HOST: ${INTERNAL_POSTGRES_HOST}
      LAJI_AUTH_URL: ${LAJI_AUTH_URL}
      SECRET_KEY: ${SECRET_KEY}
    volumes:
      - ./pygeoapi-config.yml:/pygeoapi/local.config.yml
      - ./catalogue.tinydb:/pygeoapi/catalogue.tinydb
      - ./pygeoapi/migrations:/pygeoapi/migrations
      - ./pygeoapi/custom/${TARGET}-templates:/pygeoapi/custom/templates
      - ./pygeoapi/src:/pygeoapi/src
    networks:
      - pygeoapinet
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgis/postgis
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      INTERNAL_POSTGRES_DB: ${INTERNAL_POSTGRES_DB}
      INTERNAL_POSTGRES_USER: ${INTERNAL_POSTGRES_USER}
      INTERNAL_POSTGRES_PASSWORD: ${INTERNAL_POSTGRES_PASSWORD}
    networks:
      - pygeoapinet
    volumes:
      - ./init-database.sh:/docker-entrypoint-initdb.d/init-database.sh
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres:

networks:
  pygeoapinet:
    name: pygeoapi_network
