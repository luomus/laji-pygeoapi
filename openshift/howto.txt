*Openshift**

# Log in to OpenShift.
oc login https://your-openshift-cluster-url

# Make sure you are in the correct project/namespace. You can also create a new one.
oc project your-project-name

# From the config.json file, replace dXNlcm5hbWU6cGFzc3dvcmQ= with the base64-encoded string of your username:password.

# Next, you need to base64 encode the contents of the config.json file. You can use a command-line tool to do this. For example:
base64 config.json

# From my-secret object in template.yaml file, replace 'ewoiaGVsbG8iOiAiaGVsbG8gd29ybGQiCn0K' with your base64-encoded content of your config.json file.

# Encode your also postgres credentials and copy them to the next command. For example using Git Bash:
echo -n admin123 | base64 # Encode POSTGRES_PASSWORD
echo -n postgres | base64 # Encode POSTGRES_USER
echo -n my_geospatial_db | base64 # Encode database table name

# Process the template to create a list of objects. Include your encoded parameters
oc process -f template.yaml -p POSTGRES_PASSWORD=YWRtaW4xMjM= POSTGRES_USER=cG9zdGdyZXM= POSTGRES_DB=bXlfZ2Vvc3BhdGlhbF9kYg== HOST_URL="pygeoapi-route-laji-pygeoapitest.2.rahtiapp.fi" > processed-template.yaml

# Create the objects from processed template
oc apply -f processed-template.yaml

# Add webhook to github and connect it to the python-scripts-build buildconfig (can also be done later)
https://docs.openshift.com/container-platform/3.11/dev_guide/builds/triggering_builds.html#github-webhooks


